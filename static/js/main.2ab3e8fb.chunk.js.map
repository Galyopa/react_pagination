{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","onPerPageChange","arrOfPages","Array","from","length","_","i","className","id","defaultValue","onChange","event","value","htmlFor","classNames","disabled","href","onClick","map","page","active","items","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","setTotal","lastElemetOnPage","firstElemetOnPage","useEffect","Math","ceil","currentTarget","split","slice","Number","target","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ab3e8fb.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (event: React.FormEvent<HTMLAnchorElement>) => void;\n  onPerPageChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange, onPerPageChange,\n}) => {\n  const arrOfPages = Array.from({ length: total }, (_, i) => i + 1);\n\n  return (\n    <>\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={perPage}\n            onChange={(event) => onPerPageChange(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <ul className=\"pagination\">\n        <li className={\n          classNames(\n            'page-item',\n            { disabled: currentPage <= 1 },\n          )\n        }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage <= 1}\n            onClick={(event) => onPageChange(event)}\n          >\n            «\n          </a>\n        </li>\n        {\n          arrOfPages.map((page) => (\n            <li className={\n              classNames(\n                'page-item',\n                { active: page === currentPage },\n              )\n            }\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={(event) => onPageChange(event)}\n              >\n                {page}\n              </a>\n            </li>\n          ))\n        }\n        <li className={\n          classNames(\n            'page-item',\n            { disabled: currentPage >= total },\n          )\n        }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage >= total}\n            onClick={(event) => onPageChange(event)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total, setTotal] = useState(9);\n\n  const lastElemetOnPage = (currentPage * itemsPerPage) <= items.length\n    ? currentPage * itemsPerPage\n    : (currentPage - 1) * itemsPerPage + (items.length % itemsPerPage);\n\n  const firstElemetOnPage = (currentPage - 1) * itemsPerPage;\n\n  useEffect(() => {\n    setTotal(Math.ceil(items.length / itemsPerPage));\n  });\n\n  const handleChangeCurrentPage = (\n    event: React.FormEvent<HTMLAnchorElement>,\n  ) => {\n    const page = event.currentTarget.href.split('#').slice(-1)[0];\n\n    if (page === 'prev') {\n      setCurrentPage(currentPage - 1);\n    } else if (page === 'next') {\n      setCurrentPage(currentPage + 1);\n    } else if (\n      currentPage !== Number(page)\n      && currentPage >= 1\n      && currentPage <= total\n    ) {\n      setCurrentPage(Number(page));\n    }\n  };\n\n  const handleItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstElemetOnPage + 1} - ${lastElemetOnPage} of ${items.length})`}\n      </p>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handleChangeCurrentPage}\n        onPerPageChange={handleItemsPerPage}\n      />\n      <ul>\n        {\n          items\n            .slice(firstElemetOnPage, lastElemetOnPage)\n            .map(item => (<li data-cy=\"item\" key={item}>{item}</li>))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}