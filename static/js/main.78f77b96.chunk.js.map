{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","useState","pages","setPages","useEffect","Math","ceil","arrOfPages","Array","from","length","_","i","className","classNames","disabled","href","onClick","event","map","page","active","items","to","numbers","n","push","getNumbers","App","itemsPerPage","setItemsPerPage","setCurrentPage","lastElemetOnPage","firstElemetOnPage","id","defaultValue","onChange","Number","target","value","htmlFor","currentTarget","split","slice","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78f77b96.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (event: React.FormEvent<HTMLAnchorElement>) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const [pages, setPages] = useState(9);\n\n  useEffect(() => {\n    setPages(Math.ceil(total / perPage));\n  });\n\n  const arrOfPages = Array.from({ length: pages }, (_, i) => i + 1);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={\n          classNames(\n            'page-item',\n            { disabled: currentPage <= 1 },\n          )\n        }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage <= 1}\n            onClick={(event) => onPageChange(event)}\n          >\n            «\n          </a>\n        </li>\n        {\n          arrOfPages.map((page) => (\n            <li className={\n              classNames(\n                'page-item',\n                { active: page === currentPage },\n              )\n            }\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={(event) => onPageChange(event)}\n              >\n                {page}\n              </a>\n            </li>\n          ))\n        }\n        <li className={\n          classNames(\n            'page-item',\n            { disabled: currentPage >= pages },\n          )\n        }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage >= pages}\n            onClick={(event) => onPageChange(event)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const lastElemetOnPage = (currentPage * itemsPerPage) <= items.length\n    ? currentPage * itemsPerPage\n    : (currentPage - 1) * itemsPerPage + (items.length % itemsPerPage);\n\n  const firstElemetOnPage = (currentPage - 1) * itemsPerPage;\n\n  const handleChangeCurrentPage = (\n    event: React.FormEvent<HTMLAnchorElement>,\n  ) => {\n    const page = event.currentTarget.href.split('#').slice(-1)[0];\n\n    if (page === 'prev') {\n      setCurrentPage(currentPage - 1);\n\n      return;\n    }\n\n    if (page === 'next') {\n      setCurrentPage(currentPage + 1);\n\n      return;\n    }\n\n    if (\n      currentPage !== Number(page)\n      && currentPage >= 1\n      && currentPage <= items.length\n    ) {\n      setCurrentPage(Number(page));\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstElemetOnPage + 1} - ${lastElemetOnPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handleChangeCurrentPage}\n      />\n      <ul>\n        {\n          items\n            .slice(firstElemetOnPage, lastElemetOnPage)\n            .map(item => (<li data-cy=\"item\" key={item}>{item}</li>))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}